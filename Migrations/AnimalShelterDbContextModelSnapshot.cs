// <auto-generated />
using System;
using AnimalShelter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimalShelter.Migrations
{
    [DbContext(typeof(AnimalShelterDbContext))]
    partial class AnimalShelterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalShelter.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Warszawa",
                            Country = "Polska",
                            PostalCode = "00-001",
                            StreetAddress = "ul. Kwiatowa 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "Kraków",
                            Country = "Polska",
                            PostalCode = "30-002",
                            StreetAddress = "ul. Leśna 5"
                        },
                        new
                        {
                            Id = 3,
                            City = "Poznań",
                            Country = "Polska",
                            PostalCode = "60-003",
                            StreetAddress = "ul. Słoneczna 10"
                        },
                        new
                        {
                            Id = 4,
                            City = "Gdańsk",
                            Country = "Polska",
                            PostalCode = "80-004",
                            StreetAddress = "ul. Morska 7"
                        },
                        new
                        {
                            Id = 5,
                            City = "Zakopane",
                            Country = "Polska",
                            PostalCode = "34-500",
                            StreetAddress = "ul. Górska 15"
                        },
                        new
                        {
                            Id = 6,
                            City = "Wrocław",
                            Country = "Polska",
                            PostalCode = "50-005",
                            StreetAddress = "ul. Spacerowa 20"
                        },
                        new
                        {
                            Id = 7,
                            City = "Lublin",
                            Country = "Polska",
                            PostalCode = "20-006",
                            StreetAddress = "ul. Zielona 3"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("AdoptionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("IdAddress")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Adoptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdoptionDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 1,
                            Email = "jan.kowalski@example.com",
                            FullName = "Jan Kowalski",
                            IdAddress = 1,
                            Notes = "Brak uwag",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            AdoptionDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 9,
                            Email = "anna.nowak@example.com",
                            FullName = "Anna Nowak",
                            IdAddress = 3,
                            Notes = "Adopcja przebiegła pomyślnie",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            Id = 3,
                            AdoptionDate = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 4,
                            Email = "piotr.zielinski@example.com",
                            FullName = "Piotr Zieliński",
                            IdAddress = 5,
                            Notes = "Nowy dom z ogrodem",
                            PhoneNumber = "555666777"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Breed")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<bool?>("IsAdopted")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Microchip")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<string>("Species")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 3,
                            Breed = "Labrador",
                            Color = "Czarny",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 1",
                            Microchip = "1234567890",
                            Size = "Duży",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 3,
                            Age = 4,
                            Breed = "Owczarek niemiecki",
                            Color = "Brązowy",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 3",
                            Microchip = "2233445566",
                            Size = "Duży",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 4,
                            Age = 2,
                            Breed = "Beagle",
                            Color = "Tricolor",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 4",
                            Microchip = "3344556677",
                            Size = "Średni",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 5,
                            Age = 5,
                            Breed = "Golden Retriever",
                            Color = "Złoty",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 5",
                            Microchip = "4455667788",
                            Size = "Duży",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 6,
                            Age = 6,
                            Breed = "Bulldog",
                            Color = "Biały",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 6",
                            Microchip = "5566778899",
                            Size = "Średni",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 7,
                            Age = 3,
                            Breed = "Sznaucer",
                            Color = "Srebrny",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 7",
                            Microchip = "6677889900",
                            Size = "Mały",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 8,
                            Age = 1,
                            Breed = "Mieszaniec",
                            Color = "Brązowy",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 8",
                            Microchip = "7788990011",
                            Size = "Mały",
                            Species = "Pies"
                        },
                        new
                        {
                            Id = 2,
                            Age = 2,
                            Breed = "Europejski",
                            Color = "Szary",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 2",
                            Microchip = "0987654321",
                            Size = "Mały",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 9,
                            Age = 5,
                            Breed = "Syjamski",
                            Color = "Biały",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 9",
                            Microchip = "8899001122",
                            Size = "Mały",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 10,
                            Age = 3,
                            Breed = "Perski",
                            Color = "Biały",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 10",
                            Microchip = "9900112233",
                            Size = "Mały",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 11,
                            Age = 4,
                            Breed = "Maine Coon",
                            Color = "Rudy",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 11",
                            Microchip = "1011121314",
                            Size = "Duży",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 12,
                            Age = 2,
                            Breed = "Bengalski",
                            Color = "Pręgowany",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 12",
                            Microchip = "1213141516",
                            Size = "Średni",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 13,
                            Age = 1,
                            Breed = "Sfinks",
                            Color = "Beżowy",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 13",
                            Microchip = "1314151617",
                            Size = "Mały",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 14,
                            Age = 3,
                            Breed = "Rosyjski niebieski",
                            Color = "Niebieski",
                            Gender = "Samica",
                            IsAdopted = false,
                            Location = "Boks 14",
                            Microchip = "1415161718",
                            Size = "Mały",
                            Species = "Kot"
                        },
                        new
                        {
                            Id = 15,
                            Age = 2,
                            Breed = "Mieszaniec",
                            Color = "Czarny",
                            Gender = "Samiec",
                            IsAdopted = false,
                            Location = "Boks 15",
                            Microchip = "1516171819",
                            Size = "Mały",
                            Species = "Kot"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DonationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DonationType")
                        .HasColumnType("text");

                    b.Property<string>("DonorName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("NotesOrDedication")
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            DonationDate = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Pieniądze",
                            DonorName = "Anna Nowak",
                            Email = "anna.nowak@example.com",
                            NotesOrDedication = "Dla zwierząt",
                            PaymentMethod = "Przelew",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50m,
                            DonationDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Karma",
                            DonorName = "Jan Kowalski",
                            Email = "jan.kowalski@example.com",
                            NotesOrDedication = "Karma dla psów",
                            PaymentMethod = "Osobiście",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 200m,
                            DonationDate = new DateTime(2024, 5, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Pieniądze",
                            DonorName = "Piotr Zieliński",
                            Email = "piotr.zielinski@example.com",
                            NotesOrDedication = "Na leczenie kotów",
                            PaymentMethod = "Karta",
                            PhoneNumber = "555666777"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 75m,
                            DonationDate = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Akcesoria",
                            DonorName = "Maria Wiśniewska",
                            Email = "maria.wisniewska@example.com",
                            NotesOrDedication = "Zabawki dla zwierząt",
                            PaymentMethod = "Osobiście",
                            PhoneNumber = "888999000"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 120m,
                            DonationDate = new DateTime(2024, 5, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Pieniądze",
                            DonorName = "Tomasz Lewandowski",
                            Email = "tomasz.lewandowski@example.com",
                            NotesOrDedication = "Dla schroniska",
                            PaymentMethod = "Przelew",
                            PhoneNumber = "111222333"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 60m,
                            DonationDate = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Karma",
                            DonorName = "Karolina Maj",
                            Email = "karolina.maj@example.com",
                            NotesOrDedication = "Karma dla kotów",
                            PaymentMethod = "Osobiście",
                            PhoneNumber = "444555666"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 150m,
                            DonationDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DonationType = "Pieniądze",
                            DonorName = "Grzegorz Nowak",
                            Email = "grzegorz.nowak@example.com",
                            NotesOrDedication = "Wsparcie ogólne",
                            PaymentMethod = "Karta",
                            PhoneNumber = "777888999"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventType")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2024, 6, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            EventType = "Wydarzenie",
                            Note = "Zapraszamy wszystkich!",
                            Title = "Dzień otwarty"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("text");

                    b.Property<int?>("Availability")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int?>("Roles")
                        .HasColumnType("integer");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalNotes = "Może pracować w weekendy",
                            Availability = 3,
                            City = "Gdańsk",
                            Email = "piotr.zielinski@example.com",
                            FullName = "Piotr Zieliński",
                            PhoneNumber = "555666777",
                            PostalCode = "80-001",
                            Roles = 1,
                            StreetAddress = "ul. Polna 3"
                        },
                        new
                        {
                            Id = 2,
                            AdditionalNotes = "Dostępna popołudniami",
                            Availability = 2,
                            City = "Warszawa",
                            Email = "anna.maj@example.com",
                            FullName = "Anna Maj",
                            PhoneNumber = "600700800",
                            PostalCode = "00-002",
                            Roles = 2,
                            StreetAddress = "ul. Wiosenna 4"
                        },
                        new
                        {
                            Id = 3,
                            AdditionalNotes = "Może pracować tylko w poniedziałki",
                            Availability = 1,
                            City = "Kraków",
                            Email = "tomasz.nowak@example.com",
                            FullName = "Tomasz Nowak",
                            PhoneNumber = "601701801",
                            PostalCode = "30-003",
                            Roles = 1,
                            StreetAddress = "ul. Jesienna 8"
                        },
                        new
                        {
                            Id = 4,
                            AdditionalNotes = "Lubi pracować ze zwierzętami starszymi",
                            Availability = 2,
                            City = "Poznań",
                            Email = "karolina.wisniewska@example.com",
                            FullName = "Karolina Wiśniewska",
                            PhoneNumber = "602702802",
                            PostalCode = "60-004",
                            Roles = 3,
                            StreetAddress = "ul. Letnia 12"
                        },
                        new
                        {
                            Id = 5,
                            AdditionalNotes = "Dostępny w weekendy",
                            Availability = 3,
                            City = "Wrocław",
                            Email = "marek.lewandowski@example.com",
                            FullName = "Marek Lewandowski",
                            PhoneNumber = "603703803",
                            PostalCode = "50-005",
                            Roles = 2,
                            StreetAddress = "ul. Zimowa 16"
                        },
                        new
                        {
                            Id = 6,
                            AdditionalNotes = "Może pomagać przy adopcjach",
                            Availability = 1,
                            City = "Lublin",
                            Email = "ewa.kaczmarek@example.com",
                            FullName = "Ewa Kaczmarek",
                            PhoneNumber = "604704804",
                            PostalCode = "20-006",
                            Roles = 1,
                            StreetAddress = "ul. Spacerowa 20"
                        },
                        new
                        {
                            Id = 7,
                            AdditionalNotes = "Zainteresowany opieką nad psami",
                            Availability = 2,
                            City = "Zakopane",
                            Email = "grzegorz.lis@example.com",
                            FullName = "Grzegorz Lis",
                            PhoneNumber = "605705805",
                            PostalCode = "34-500",
                            Roles = 3,
                            StreetAddress = "ul. Zielona 3"
                        },
                        new
                        {
                            Id = 8,
                            AdditionalNotes = "Pomoc w organizacji wydarzeń",
                            Availability = 3,
                            City = "Gdynia",
                            Email = "magdalena.bak@example.com",
                            FullName = "Magdalena Bąk",
                            PhoneNumber = "606706806",
                            PostalCode = "81-007",
                            Roles = 2,
                            StreetAddress = "ul. Słoneczna 10"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Models.Adoption", b =>
                {
                    b.HasOne("AnimalShelter.Models.Address", "Address")
                        .WithMany("Adoptions")
                        .HasForeignKey("AddressId");

                    b.HasOne("AnimalShelter.Models.Animal", "Animal")
                        .WithMany("Adoptions")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("AnimalShelter.Models.Address", b =>
                {
                    b.Navigation("Adoptions");
                });

            modelBuilder.Entity("AnimalShelter.Models.Animal", b =>
                {
                    b.Navigation("Adoptions");
                });
#pragma warning restore 612, 618
        }
    }
}
